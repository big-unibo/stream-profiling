clustering {
    k-min = 2
    k-max = 20
}

window {
    debugFolder=stream-profiling
    batchTime = 10000
    windowDuration = 1000000
    slideDuration = 100000
    event_time = false #if true use event time
    csv_file=${window.debugFolder}/clusters.csv
    clusters_details=${window.debugFolder}/clusters_details.csv
    rep_2d=${window.debugFolder}/rep_2d.csv
    sttdev=${window.debugFolder}/stddev.csv
    rep_2d_seed=${window.debugFolder}/rep_2d_seed.csv
    distance-matrix=${window.debugFolder}/distance_matrix.csv
    full-distance-matrix=${window.debugFolder}/complete-distance_matrix.csv
    distance-vector=${window.debugFolder}/distance_vector.csv
    save = "save/snapshot"
    frequency = 500 #associated at kotlin seed frequency
    seeds = 10 #associated at kotlin number of seeds
    frequency_statistics=${window.debugFolder}/frequency_statistics.csv
    numbers_statistics=${window.debugFolder}/window_number_statistics.csv
    simulation_file=stream-profiling/datasets/windowTest/seeds_SIM.csv
}

2phases {
    collisions=stream-profiling/2phases_collisions.csv
    collisions2=stream-profiling/2phases_collisions2.csv
    clusters=${window.debugFolder}/2phases_clusters.csv
    coresets=${window.debugFolder}/2phases_coreset.csv
    clustersDistances=${window.debugFolder}/2phases_clusters_distances.csv
    insertDistance=${window.debugFolder}/2phases_insert_distances.csv
    operationsDebug=${window.debugFolder}/2phases_operations_debug.csv
    operations=${window.debugFolder}/2phases_large_operations_times.csv
    zScoreSeparation=${window.debugFolder}/dsc_zscore_separation.csv
    zScoreScattering=${window.debugFolder}/dsc_zscore_scattering.csv
}

debug {
    files_stat=stream-profiling/files_stat.csv
}